name: SLACK 7PM ALRAM

on:
  schedule:
    - cron: "0 19 * * 1-5"

jobs:
  slack-alram:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR List
        uses: "actions/github-script@v3"
        id: PR_list
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner: $owner, name: $name) {
                pullRequests(last: 100, states: OPEN) {
                  edges {
                    node {
                      title
                    }
                  }
                }
              }
            }`

            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
            }

            const {repository:{pullRequests:{edges: list}}} = await github.graphql(query, variables)
            const title = `총 ${list.length}개의 PR이 당신의 리뷰를 기다리고 있습니다.`
            const message = list.map(pr=>pr.node.title).join('\n')
            core.exportVariable('SLACK_ALRAM_TITLE', title);
            core.exportVariable('SLACK_MESSAGE', message);

      - name: action-slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          author_name: Github Action Test
          fields: pullRequest,workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              text: `${process.env.SLACK_ALRAM_TITLE}`,
              attachments: [{
                text: `${process.env.SLACK_MESSAGE}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
